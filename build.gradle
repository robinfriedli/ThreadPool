plugins {
    id "java"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.8.5"
}

def artifact = "ThreadPool"

group "net.robinfriedli"
version "1.1"
sourceCompatibility = "9"
targetCompatibility = "9"

compileJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.testng:testng:7.3.0"
    testCompile "com.google.truth:truth:1.1"
}

test {
    useTestNG()
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = rootProject.group
            artifactId = artifact
            version = rootProject.version
            from components.java
        }
    }
}

def bintrayProperties = new Properties()
def bintrayPropertiesFile = file("src/main/resources/bintray.properties")
if (bintrayPropertiesFile.exists()) {
    bintrayPropertiesFile.withInputStream { bintrayProperties.load(it) }
} else {
    bintrayProperties.setProperty("bintray.user", "empty")
    bintrayProperties.setProperty("bintray.key", "empty")
}

bintray {
    user = bintrayProperties.get("bintray.user")
    key = bintrayProperties.get("bintray.key")
    publications = ["release"]
    pkg {
        repo = rootProject.group
        name = "ThreadPool"
        description "Scalable self growing / shrinking ThreadPool implementation. This ThreadPool implements the ExecutorService interface and offers an alternative for the JDK ThreadPoolExecutor implementation that prioritizes creating new worker threads above queueing tasks for better potential throughput and flexibility."
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/robinfriedli/ThreadPool"
        version {
            name = rootProject.version
            released = new Date()
        }
    }
}